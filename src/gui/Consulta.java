/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Elio Flores
 */
public class Consulta extends javax.swing.JInternalFrame {

  private final List<Contacto> contactos;

  /**
   * Creates new form Consulta
   */
  public Consulta(List<Contacto> contactos) {
    this.contactos = new ArrayList<Contacto>(contactos);
    initComponents();
    initTabla();
    Collections.sort(this.contactos);
    actualizarTabla(this.contactos);
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    busqueda = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    tabla = new javax.swing.JTable();
    propiedad = new javax.swing.JComboBox<>();

    setClosable(true);

    busqueda.addKeyListener(new java.awt.event.KeyAdapter() {
      public void keyReleased(java.awt.event.KeyEvent evt) {
        busquedaKeyReleased(evt);
      }
    });

    jLabel1.setText("Busqueda: ");

    tabla.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {

      },
      new String [] {
        "Title 1", "Title 2", "Title 3", "Title 4"
      }
    ));
    jScrollPane1.setViewportView(tabla);

    propiedad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Telefono", "Email" }));

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(propiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addComponent(jLabel1)
            .addGap(18, 18, 18)
            .addComponent(busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(34, 34, 34)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel1)
          .addComponent(propiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void busquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busquedaKeyReleased
    // TODO add your handling code here:
    List<Contacto> seleccionados = new ArrayList<>();

    if (propiedad.getSelectedItem().toString().equalsIgnoreCase("Nombre")) {
      for (Contacto contacto : contactos) {
        if (contacto.getNombre().startsWith(busqueda.getText())) {
          seleccionados.add(contacto);
        }
      }
    }

    if (propiedad.getSelectedItem().toString().equalsIgnoreCase("Telefono")) {
      for (Contacto contacto : contactos) {
        if (contacto.getTelefono().startsWith(busqueda.getText())) {
          seleccionados.add(contacto);
        }
      }
    }

    if (propiedad.getSelectedItem().toString().equalsIgnoreCase("Email")) {
      for (Contacto contacto : contactos) {
        if (contacto.getEmail().startsWith(busqueda.getText())) {
          seleccionados.add(contacto);
        }
      }
    }

    actualizarTabla(seleccionados);
  }//GEN-LAST:event_busquedaKeyReleased

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField busqueda;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JComboBox<String> propiedad;
  private javax.swing.JTable tabla;
  // End of variables declaration//GEN-END:variables

  private void initTabla() {
    DefaultTableModel modelo = new DefaultTableModel() {
      public boolean isCellEditable(int f, int c) {
        return false;
      }
    };
    modelo.addColumn("Id");
    modelo.addColumn("Nombre");
    modelo.addColumn("Telefono");
    modelo.addColumn("Email");
    tabla.setModel(modelo);
  }

  private void actualizarTabla(List<Contacto> seleccionados) {
    DefaultTableModel modelo = ((DefaultTableModel) tabla.getModel());
    vaciarTabla();
    for (Contacto contacto : seleccionados) {
      modelo.addRow(new Object[]{contacto.getId(),
        contacto.getNombre(),
        contacto.getTelefono(),
        contacto.getEmail()
      });
    }
  }

  private void vaciarTabla() {
    DefaultTableModel modelo = ((DefaultTableModel) tabla.getModel());
    for (int fila = tabla.getRowCount() - 1; fila >= 0; fila--) {
      modelo.removeRow(fila);
    }
  }
}
